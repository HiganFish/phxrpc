/* phxrpc_summon_stub.h

 Generated by phxrpc_pb2client from summon.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "../summon.pb.h"


namespace phxrpc {


class BaseMessageHandlerFactory;
class BaseTcpStream;
class ClientMonitor;


}


class SummonStub {
  public:
    SummonStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor,
            phxrpc::BaseMessageHandlerFactory &msg_handler_factory);
    virtual ~SummonStub();

    void set_keep_alive(const bool keep_alive);

    int PHXEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp);
    int Summon(const summon::SummonRequest &req, summon::SummonResult *resp);

  private:
    phxrpc::BaseTcpStream &socket_;
    phxrpc::ClientMonitor &client_monitor_;
    bool keep_alive_{false};
    phxrpc::BaseMessageHandlerFactory &msg_handler_factory_;
};

