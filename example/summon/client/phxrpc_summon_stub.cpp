/* phxrpc_summon_stub.cpp

 Generated by phxrpc_pb2client from summon.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#include "phxrpc_summon_stub.h"

#include "phxrpc/http.h"
#include "phxrpc/network.h"
#include "phxrpc/rpc.h"


SummonStub::SummonStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor,
        phxrpc::BaseMessageHandlerFactory &msg_handler_factory)
        : socket_(socket), client_monitor_(client_monitor),
          msg_handler_factory_(msg_handler_factory) {
}

SummonStub::~SummonStub() {
}

void SummonStub::set_keep_alive(const bool keep_alive) {
    keep_alive_ = keep_alive;
}

int SummonStub::PHXEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp) {
    phxrpc::Caller caller(socket_, client_monitor_, msg_handler_factory_);
    caller.set_uri("/summon/PHXEcho", -1);
    caller.set_keep_alive(keep_alive_);
    return caller.Call(req, resp);
}

int SummonStub::Summon(const summon::SummonRequest &req, summon::SummonResult *resp) {
    phxrpc::Caller caller(socket_, client_monitor_, msg_handler_factory_);
    caller.set_uri("/summon/Summon", 1);
    caller.set_keep_alive(keep_alive_);
    return caller.Call(req, resp);
}

